//############## DECLARACION DE VARIABLES #######################

#include <xc.h>
#include "confi.h"
//#include "bitsconf.h" //LLAMO LA LIBRERIA DE LOS BITS DE CONFIGURACION 
#define _XTAL_FREQ 8000000 //DEFINO LA FRECUENCOA DE RELOJ DE OSCILADOR 
 
void main (void);
void contadorbinario(void);
int cont0 = 0;
char ciclo = 1;

//###################DECLARACION DE CONFIGURACION #############################
void main (void){
    
//###############OSCILADOR 8MH###################################
OSCCONbits.IRCF = 0b111; //DE 8MH 
OSCCONbits.SCS = 0b00; // 
 
// CONFIGURACION DE PUERTOS 
TRISA = 0b00000000; //PUERTO A COMO SALIDA PARA LEDS
TRISB = 0b11111111; //PUERTO B COMO ENTRADA PAFRA PUSH Y POT
TRISC = 0b00000000; //PUERTO C COMO SALIDA  DISPLAY
TRISD = 0b00000000; //PUERTO D COMO SALIDA CONTADOR
//TRISE = 0b00000000; // PUERTO E COMO SALIDA 

PORTA = 0b00000000; // LIMPIAMOS LOS PUERTOS 
PORTB = 0b00000000; // LIMPIAMOS LOS PUERTOS 
PORTC = 0b00000000; // LIMPIAMOS LOS PUERTOS 
PORTD = 0b00000000; // LIMPIAMOS LOS PUERTOS 
//PORTE = 0; // LIMPIAMOS LOS PUERTOS 
ANSELH = 0; //PARA PONER LAS ENTRADAS COMO DIGITALES 
//ANSELH = 0b11111111;  //PONEMOS COMO ANALOGICO  (para )  


//#####################PULL UP INTERNAS######################## 
//OPTION_REGbits.nRBPU = 0; //HABILITO TODAS LOS PULLUPS 
//int nRBPU = 255; //PONGO LAS RESISTENCIAS DEL PUERTO B


//#########HABILITOS LAS INTERRUPCIONES#########
INTCONbits.GIE = 1; //interrupcion global  
INTCONbits.RBIF = 0; //SE LIMPIA
INTCONbits.RBIF = 1; //SE PONE HABILITADO LA BANDERA DEL INTERRUPT ON CHANGE
IOCB = 1; 
IOCBbits.IOCB0 = 1; //LA BANDERA EN PUERTO B0
IOCBbits.IOCB3 = 1; //BANDERA EN PUERTO B3 

      //while(1);  
contadorbinario();
return;
}

void contadorbinario(void){
    __delay_ms(3000);
    do{ 
        if(IOCBbits.IOCB0 = 1   && PORTBbits.RB0== 1){
            PORTD = 0b00000100;
            cont0++;
            __delay_ms(500);
            IOCBbits.IOCB0 = 0; 
            do{
                //********
            }while(PORTBbits.RB0 == 1);
            PORTA = cont0;
        }
        if(IOCBbits.IOCB3 = 1   && PORTBbits.RB3== 1){
            cont0--;
            __delay_ms(500);
            do{
                //********
            }while(PORTBbits.RB3 == 1);
            PORTA = cont0;
            IOCBbits.IOCB3 = 0; 
        }
       if(cont0>255){
           cont0 = 0;
                  
        }
        
    }
while(ciclo==1);
 
}


